// Generated by view binder compiler. Do not edit!
package com.mws.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.mws.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemActiveTestBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final MaterialButton startTestButton;

  @NonNull
  public final TextView testDueDate;

  @NonNull
  public final TextView testName;

  @NonNull
  public final TextView testStatus;

  @NonNull
  public final TextView testSubject;

  @NonNull
  public final TextView testTypeBadge;

  private ItemActiveTestBinding(@NonNull CardView rootView, @NonNull MaterialButton startTestButton,
      @NonNull TextView testDueDate, @NonNull TextView testName, @NonNull TextView testStatus,
      @NonNull TextView testSubject, @NonNull TextView testTypeBadge) {
    this.rootView = rootView;
    this.startTestButton = startTestButton;
    this.testDueDate = testDueDate;
    this.testName = testName;
    this.testStatus = testStatus;
    this.testSubject = testSubject;
    this.testTypeBadge = testTypeBadge;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemActiveTestBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemActiveTestBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_active_test, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemActiveTestBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.startTestButton;
      MaterialButton startTestButton = ViewBindings.findChildViewById(rootView, id);
      if (startTestButton == null) {
        break missingId;
      }

      id = R.id.testDueDate;
      TextView testDueDate = ViewBindings.findChildViewById(rootView, id);
      if (testDueDate == null) {
        break missingId;
      }

      id = R.id.testName;
      TextView testName = ViewBindings.findChildViewById(rootView, id);
      if (testName == null) {
        break missingId;
      }

      id = R.id.testStatus;
      TextView testStatus = ViewBindings.findChildViewById(rootView, id);
      if (testStatus == null) {
        break missingId;
      }

      id = R.id.testSubject;
      TextView testSubject = ViewBindings.findChildViewById(rootView, id);
      if (testSubject == null) {
        break missingId;
      }

      id = R.id.testTypeBadge;
      TextView testTypeBadge = ViewBindings.findChildViewById(rootView, id);
      if (testTypeBadge == null) {
        break missingId;
      }

      return new ItemActiveTestBinding((CardView) rootView, startTestButton, testDueDate, testName,
          testStatus, testSubject, testTypeBadge);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
