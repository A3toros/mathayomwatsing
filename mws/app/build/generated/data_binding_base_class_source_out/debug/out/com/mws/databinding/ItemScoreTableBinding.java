// Generated by view binder compiler. Do not edit!
package com.mws.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.mws.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemScoreTableBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final View scorePerformanceIndicator;

  @NonNull
  public final TextView scoreTestDetails;

  @NonNull
  public final TextView scoreTestName;

  @NonNull
  public final TextView scoreValue;

  private ItemScoreTableBinding(@NonNull CardView rootView, @NonNull View scorePerformanceIndicator,
      @NonNull TextView scoreTestDetails, @NonNull TextView scoreTestName,
      @NonNull TextView scoreValue) {
    this.rootView = rootView;
    this.scorePerformanceIndicator = scorePerformanceIndicator;
    this.scoreTestDetails = scoreTestDetails;
    this.scoreTestName = scoreTestName;
    this.scoreValue = scoreValue;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemScoreTableBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemScoreTableBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_score_table, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemScoreTableBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.scorePerformanceIndicator;
      View scorePerformanceIndicator = ViewBindings.findChildViewById(rootView, id);
      if (scorePerformanceIndicator == null) {
        break missingId;
      }

      id = R.id.scoreTestDetails;
      TextView scoreTestDetails = ViewBindings.findChildViewById(rootView, id);
      if (scoreTestDetails == null) {
        break missingId;
      }

      id = R.id.scoreTestName;
      TextView scoreTestName = ViewBindings.findChildViewById(rootView, id);
      if (scoreTestName == null) {
        break missingId;
      }

      id = R.id.scoreValue;
      TextView scoreValue = ViewBindings.findChildViewById(rootView, id);
      if (scoreValue == null) {
        break missingId;
      }

      return new ItemScoreTableBinding((CardView) rootView, scorePerformanceIndicator,
          scoreTestDetails, scoreTestName, scoreValue);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
