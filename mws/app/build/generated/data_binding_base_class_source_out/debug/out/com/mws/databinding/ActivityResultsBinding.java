// Generated by view binder compiler. Do not edit!
package com.mws.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.mws.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityResultsBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final MaterialCardView actionsCard;

  @NonNull
  public final MaterialButton backToDashboardButton;

  @NonNull
  public final TextView correctAnswersTextView;

  @NonNull
  public final MaterialCardView headerCard;

  @NonNull
  public final TextView incorrectAnswersTextView;

  @NonNull
  public final MaterialCardView questionsCard;

  @NonNull
  public final RecyclerView questionsRecyclerView;

  @NonNull
  public final MaterialButton retakeTestButton;

  @NonNull
  public final TextView scoreTextView;

  @NonNull
  public final MaterialCardView statsCard;

  @NonNull
  public final TextView subjectTextView;

  @NonNull
  public final TextView testNameTextView;

  @NonNull
  public final TextView timeTakenTextView;

  @NonNull
  public final TextView totalQuestionsTextView;

  private ActivityResultsBinding(@NonNull ScrollView rootView,
      @NonNull MaterialCardView actionsCard, @NonNull MaterialButton backToDashboardButton,
      @NonNull TextView correctAnswersTextView, @NonNull MaterialCardView headerCard,
      @NonNull TextView incorrectAnswersTextView, @NonNull MaterialCardView questionsCard,
      @NonNull RecyclerView questionsRecyclerView, @NonNull MaterialButton retakeTestButton,
      @NonNull TextView scoreTextView, @NonNull MaterialCardView statsCard,
      @NonNull TextView subjectTextView, @NonNull TextView testNameTextView,
      @NonNull TextView timeTakenTextView, @NonNull TextView totalQuestionsTextView) {
    this.rootView = rootView;
    this.actionsCard = actionsCard;
    this.backToDashboardButton = backToDashboardButton;
    this.correctAnswersTextView = correctAnswersTextView;
    this.headerCard = headerCard;
    this.incorrectAnswersTextView = incorrectAnswersTextView;
    this.questionsCard = questionsCard;
    this.questionsRecyclerView = questionsRecyclerView;
    this.retakeTestButton = retakeTestButton;
    this.scoreTextView = scoreTextView;
    this.statsCard = statsCard;
    this.subjectTextView = subjectTextView;
    this.testNameTextView = testNameTextView;
    this.timeTakenTextView = timeTakenTextView;
    this.totalQuestionsTextView = totalQuestionsTextView;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityResultsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityResultsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_results, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityResultsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.actionsCard;
      MaterialCardView actionsCard = ViewBindings.findChildViewById(rootView, id);
      if (actionsCard == null) {
        break missingId;
      }

      id = R.id.backToDashboardButton;
      MaterialButton backToDashboardButton = ViewBindings.findChildViewById(rootView, id);
      if (backToDashboardButton == null) {
        break missingId;
      }

      id = R.id.correctAnswersTextView;
      TextView correctAnswersTextView = ViewBindings.findChildViewById(rootView, id);
      if (correctAnswersTextView == null) {
        break missingId;
      }

      id = R.id.headerCard;
      MaterialCardView headerCard = ViewBindings.findChildViewById(rootView, id);
      if (headerCard == null) {
        break missingId;
      }

      id = R.id.incorrectAnswersTextView;
      TextView incorrectAnswersTextView = ViewBindings.findChildViewById(rootView, id);
      if (incorrectAnswersTextView == null) {
        break missingId;
      }

      id = R.id.questionsCard;
      MaterialCardView questionsCard = ViewBindings.findChildViewById(rootView, id);
      if (questionsCard == null) {
        break missingId;
      }

      id = R.id.questionsRecyclerView;
      RecyclerView questionsRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (questionsRecyclerView == null) {
        break missingId;
      }

      id = R.id.retakeTestButton;
      MaterialButton retakeTestButton = ViewBindings.findChildViewById(rootView, id);
      if (retakeTestButton == null) {
        break missingId;
      }

      id = R.id.scoreTextView;
      TextView scoreTextView = ViewBindings.findChildViewById(rootView, id);
      if (scoreTextView == null) {
        break missingId;
      }

      id = R.id.statsCard;
      MaterialCardView statsCard = ViewBindings.findChildViewById(rootView, id);
      if (statsCard == null) {
        break missingId;
      }

      id = R.id.subjectTextView;
      TextView subjectTextView = ViewBindings.findChildViewById(rootView, id);
      if (subjectTextView == null) {
        break missingId;
      }

      id = R.id.testNameTextView;
      TextView testNameTextView = ViewBindings.findChildViewById(rootView, id);
      if (testNameTextView == null) {
        break missingId;
      }

      id = R.id.timeTakenTextView;
      TextView timeTakenTextView = ViewBindings.findChildViewById(rootView, id);
      if (timeTakenTextView == null) {
        break missingId;
      }

      id = R.id.totalQuestionsTextView;
      TextView totalQuestionsTextView = ViewBindings.findChildViewById(rootView, id);
      if (totalQuestionsTextView == null) {
        break missingId;
      }

      return new ActivityResultsBinding((ScrollView) rootView, actionsCard, backToDashboardButton,
          correctAnswersTextView, headerCard, incorrectAnswersTextView, questionsCard,
          questionsRecyclerView, retakeTestButton, scoreTextView, statsCard, subjectTextView,
          testNameTextView, timeTakenTextView, totalQuestionsTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
