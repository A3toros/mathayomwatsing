// Generated by view binder compiler. Do not edit!
package com.mws.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.drawerlayout.widget.DrawerLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.imageview.ShapeableImageView;
import com.google.android.material.navigation.NavigationView;
import com.mws.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final DrawerLayout rootView;

  @NonNull
  public final CardView activeTasksCard;

  @NonNull
  public final TextView activeTasksCount;

  @NonNull
  public final TextView activeTasksLabel;

  @NonNull
  public final TextView activeTasksTitle;

  @NonNull
  public final CardView activeTestsCard;

  @NonNull
  public final RecyclerView activeTestsRecyclerView;

  @NonNull
  public final TextView activeTestsTitle;

  @NonNull
  public final CardView averageScoreCard;

  @NonNull
  public final TextView averageScorePercent;

  @NonNull
  public final TextView averageScoreTitle;

  @NonNull
  public final TextView averageScoreValue;

  @NonNull
  public final DrawerLayout drawerLayout;

  @NonNull
  public final TextView expandScoresButton;

  @NonNull
  public final TextView expandTestsButton;

  @NonNull
  public final ImageButton hamburgerButton;

  @NonNull
  public final NavigationView navigationDrawer;

  @NonNull
  public final ShapeableImageView profilePicture;

  @NonNull
  public final ProgressBar scoreLoadingProgress;

  @NonNull
  public final CardView scoreTableCard;

  @NonNull
  public final RecyclerView scoreTableRecyclerView;

  @NonNull
  public final TextView scoreTableTitle;

  @NonNull
  public final CardView topBarCard;

  @NonNull
  public final TextView welcomeText;

  private ActivityMainBinding(@NonNull DrawerLayout rootView, @NonNull CardView activeTasksCard,
      @NonNull TextView activeTasksCount, @NonNull TextView activeTasksLabel,
      @NonNull TextView activeTasksTitle, @NonNull CardView activeTestsCard,
      @NonNull RecyclerView activeTestsRecyclerView, @NonNull TextView activeTestsTitle,
      @NonNull CardView averageScoreCard, @NonNull TextView averageScorePercent,
      @NonNull TextView averageScoreTitle, @NonNull TextView averageScoreValue,
      @NonNull DrawerLayout drawerLayout, @NonNull TextView expandScoresButton,
      @NonNull TextView expandTestsButton, @NonNull ImageButton hamburgerButton,
      @NonNull NavigationView navigationDrawer, @NonNull ShapeableImageView profilePicture,
      @NonNull ProgressBar scoreLoadingProgress, @NonNull CardView scoreTableCard,
      @NonNull RecyclerView scoreTableRecyclerView, @NonNull TextView scoreTableTitle,
      @NonNull CardView topBarCard, @NonNull TextView welcomeText) {
    this.rootView = rootView;
    this.activeTasksCard = activeTasksCard;
    this.activeTasksCount = activeTasksCount;
    this.activeTasksLabel = activeTasksLabel;
    this.activeTasksTitle = activeTasksTitle;
    this.activeTestsCard = activeTestsCard;
    this.activeTestsRecyclerView = activeTestsRecyclerView;
    this.activeTestsTitle = activeTestsTitle;
    this.averageScoreCard = averageScoreCard;
    this.averageScorePercent = averageScorePercent;
    this.averageScoreTitle = averageScoreTitle;
    this.averageScoreValue = averageScoreValue;
    this.drawerLayout = drawerLayout;
    this.expandScoresButton = expandScoresButton;
    this.expandTestsButton = expandTestsButton;
    this.hamburgerButton = hamburgerButton;
    this.navigationDrawer = navigationDrawer;
    this.profilePicture = profilePicture;
    this.scoreLoadingProgress = scoreLoadingProgress;
    this.scoreTableCard = scoreTableCard;
    this.scoreTableRecyclerView = scoreTableRecyclerView;
    this.scoreTableTitle = scoreTableTitle;
    this.topBarCard = topBarCard;
    this.welcomeText = welcomeText;
  }

  @Override
  @NonNull
  public DrawerLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.activeTasksCard;
      CardView activeTasksCard = ViewBindings.findChildViewById(rootView, id);
      if (activeTasksCard == null) {
        break missingId;
      }

      id = R.id.activeTasksCount;
      TextView activeTasksCount = ViewBindings.findChildViewById(rootView, id);
      if (activeTasksCount == null) {
        break missingId;
      }

      id = R.id.activeTasksLabel;
      TextView activeTasksLabel = ViewBindings.findChildViewById(rootView, id);
      if (activeTasksLabel == null) {
        break missingId;
      }

      id = R.id.activeTasksTitle;
      TextView activeTasksTitle = ViewBindings.findChildViewById(rootView, id);
      if (activeTasksTitle == null) {
        break missingId;
      }

      id = R.id.activeTestsCard;
      CardView activeTestsCard = ViewBindings.findChildViewById(rootView, id);
      if (activeTestsCard == null) {
        break missingId;
      }

      id = R.id.activeTestsRecyclerView;
      RecyclerView activeTestsRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (activeTestsRecyclerView == null) {
        break missingId;
      }

      id = R.id.activeTestsTitle;
      TextView activeTestsTitle = ViewBindings.findChildViewById(rootView, id);
      if (activeTestsTitle == null) {
        break missingId;
      }

      id = R.id.averageScoreCard;
      CardView averageScoreCard = ViewBindings.findChildViewById(rootView, id);
      if (averageScoreCard == null) {
        break missingId;
      }

      id = R.id.averageScorePercent;
      TextView averageScorePercent = ViewBindings.findChildViewById(rootView, id);
      if (averageScorePercent == null) {
        break missingId;
      }

      id = R.id.averageScoreTitle;
      TextView averageScoreTitle = ViewBindings.findChildViewById(rootView, id);
      if (averageScoreTitle == null) {
        break missingId;
      }

      id = R.id.averageScoreValue;
      TextView averageScoreValue = ViewBindings.findChildViewById(rootView, id);
      if (averageScoreValue == null) {
        break missingId;
      }

      DrawerLayout drawerLayout = (DrawerLayout) rootView;

      id = R.id.expandScoresButton;
      TextView expandScoresButton = ViewBindings.findChildViewById(rootView, id);
      if (expandScoresButton == null) {
        break missingId;
      }

      id = R.id.expandTestsButton;
      TextView expandTestsButton = ViewBindings.findChildViewById(rootView, id);
      if (expandTestsButton == null) {
        break missingId;
      }

      id = R.id.hamburgerButton;
      ImageButton hamburgerButton = ViewBindings.findChildViewById(rootView, id);
      if (hamburgerButton == null) {
        break missingId;
      }

      id = R.id.navigationDrawer;
      NavigationView navigationDrawer = ViewBindings.findChildViewById(rootView, id);
      if (navigationDrawer == null) {
        break missingId;
      }

      id = R.id.profilePicture;
      ShapeableImageView profilePicture = ViewBindings.findChildViewById(rootView, id);
      if (profilePicture == null) {
        break missingId;
      }

      id = R.id.scoreLoadingProgress;
      ProgressBar scoreLoadingProgress = ViewBindings.findChildViewById(rootView, id);
      if (scoreLoadingProgress == null) {
        break missingId;
      }

      id = R.id.scoreTableCard;
      CardView scoreTableCard = ViewBindings.findChildViewById(rootView, id);
      if (scoreTableCard == null) {
        break missingId;
      }

      id = R.id.scoreTableRecyclerView;
      RecyclerView scoreTableRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (scoreTableRecyclerView == null) {
        break missingId;
      }

      id = R.id.scoreTableTitle;
      TextView scoreTableTitle = ViewBindings.findChildViewById(rootView, id);
      if (scoreTableTitle == null) {
        break missingId;
      }

      id = R.id.topBarCard;
      CardView topBarCard = ViewBindings.findChildViewById(rootView, id);
      if (topBarCard == null) {
        break missingId;
      }

      id = R.id.welcomeText;
      TextView welcomeText = ViewBindings.findChildViewById(rootView, id);
      if (welcomeText == null) {
        break missingId;
      }

      return new ActivityMainBinding((DrawerLayout) rootView, activeTasksCard, activeTasksCount,
          activeTasksLabel, activeTasksTitle, activeTestsCard, activeTestsRecyclerView,
          activeTestsTitle, averageScoreCard, averageScorePercent, averageScoreTitle,
          averageScoreValue, drawerLayout, expandScoresButton, expandTestsButton, hamburgerButton,
          navigationDrawer, profilePicture, scoreLoadingProgress, scoreTableCard,
          scoreTableRecyclerView, scoreTableTitle, topBarCard, welcomeText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
